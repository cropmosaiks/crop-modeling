---
title: Final Figures
author: 
  - name: Cullen Molitor
    orcid: 0000-0001-8309-8821
    url: https://github.com/cullen-molitor
    affiliations:
      - ref: bren
  - name: Grace Lewin
    orcid: 0000-0001-7106-0201
    url: https://github.com/gracelewin
    affiliations:
      - ref: eemb
  - name: Juliet Cohen
    orcid: 0000-0001-8217-4028
    url: https://github.com/julietcohen
    affiliations:
      - ref: nceas
  - name: Steven Cognac
    orcid: 0000-0001-8803-3074
    url: https://github.com/cognack
    affiliations:
      - ref: bren
  - name: Jonathan Proctor
    orcid: 0000-0001-8053-8828
    url: https://www.jonathanproctor.org/
    affiliations:
      - ref: harvard
  - name: Tamma Carleton
    orcid: 0000-0002-5518-0550
    url: https://www.tammacarleton.com/
    affiliations:
      - ref: bren
affiliations:
  - id: bren
    name: Bren School of Environmental Science & Management, UC Santa Barbara
    city: Santa Barbara
    state: CA
  - id: eemb
    name: Ecology, Evolution, and Marine Biology, UC Santa Barbara
    city: Santa Barbara
    state: CA
  - id: nceas
    name: National Center for Ecological Analysis and Synthesis
    city: Santa Barbara
    state: CA
  - id: harvard
    name: Center for the Environment and Data Science Initiative, Harvard University
    city: Cambridge
    state: MA
date: '`r Sys.Date()`'
format:
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-title: Contents
    toc-depth: 4
    number-sections: false
fig-cap-location: bottom
---

# Setup

```{r message=F, warning=F}
####################### R ENVIRONMENT #######################
knitr::opts_chunk$set(message = FALSE, warning = FALSE)

source(here::here('code', '4_explore_results', 'utility.R'))

oos_preds <- here::here(
  "data",
  "results",
  "2_sensor_top-mod_oos_predictions_10-splits_2023-05-24_rcf_climate-False_anom-False.csv"
  ) |> 
  readr::read_csv()

oos_preds_summary <- oos_preds |> 
  dplyr::group_by(data_fold, district, year) |> 
  dplyr::summarise(
    log_yield = mean(log_yield),
    oos_prediction = mean(oos_prediction),
    demean_log_yield = mean(demean_log_yield), 
    demean_oos_prediction = mean(demean_oos_prediction)
  )
test_pred <- dplyr::filter(oos_preds_summary, data_fold == "test")
train_pred <- dplyr::filter(oos_preds_summary, data_fold == "train")

summary_stats <- oos_preds |> 
  dplyr::group_by(data_fold, split, random_state) |> 
  dplyr::summarise(
    R2 = r2_general(log_yield, oos_prediction),
    r2 = r2_pears(log_yield, oos_prediction),
    demean_R2 = r2_general(demean_log_yield, demean_oos_prediction),
    demean_r2 = r2_pears(demean_log_yield, demean_oos_prediction)
  ) |> 
  dplyr::ungroup() |> 
  dplyr::group_by(data_fold) |> 
  dplyr::summarise(
    mean_R2 = mean(R2) |> round(3), 
    mean_r2 = mean(r2) |> round(3), 
    mean_demean_R2 = mean(demean_R2) |> round(3), 
    mean_demean_r2 = mean(demean_r2) |> round(3), 
    sem_R2 = (stderror(R2) * 2) |> round(3),
    sem_r2 = (stderror(r2) * 2) |> round(3), 
    sem_demean_R2 = (stderror(demean_R2) * 2) |> round(3),
    sem_demean_r2 = (stderror(demean_r2) * 2) |> round(3)
  ) 
```


```{r}
val <- dplyr::filter(summary_stats, data_fold == "train")
test <- dplyr::filter(summary_stats, data_fold == "test") 

val_R2 <- dplyr::pull(val, mean_R2)
val_sem_R2   <- dplyr::pull(val, sem_R2)
val_r2 <- dplyr::pull(val, mean_r2)
val_sem_r2  <- dplyr::pull(val, sem_r2) 

test_R2 <- dplyr::pull(test, mean_R2)
test_sem_R2  <- dplyr::pull(test, sem_R2)
test_r2 <- dplyr::pull(test, mean_r2)
test_sem_r2  <- dplyr::pull(test, sem_r2)

val_demean_R2 <- dplyr::pull(val, mean_demean_R2)
val_demean_sem_R2   <- dplyr::pull(val, sem_demean_R2)
val_demean_r2 <- dplyr::pull(val, mean_demean_r2)
val_demean_sem_r2  <- dplyr::pull(val, sem_demean_r2) 

test_demean_R2 <- dplyr::pull(test, mean_demean_R2)
test_demean_sem_R2  <- dplyr::pull(test, sem_demean_R2)
test_demean_r2 <- dplyr::pull(test, mean_demean_r2)
test_demean_sem_r2  <- dplyr::pull(test, sem_demean_r2)

```


```{r fig.height=4.5, fig.width=8.5}

leg_pos <- c(.89, .25)

p1 <- ggplot() +
  geom_point(data = train_pred,
             aes(x = log_yield, y = oos_prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = 'Model estimate') +
  geom_text(data = NULL, aes(x = .15, y = .8), label = latex2exp::TeX(
    paste0(r'($R^2 = $)', val_R2, r'( ()', val_sem_R2, r'())')
  )) +
  geom_text(data = NULL, aes(x = .15, y = .75), label = latex2exp::TeX(
    paste0(r'( $r^2 = $)', val_r2, r'( ()', val_sem_r2, r'())')
  )) +
  scale_x_continuous(limits = c(0, .82)) +
  scale_y_continuous(limits = c(0, 0.82)) +
  theme(legend.position = "none")  

p1 <- ggExtra::ggMarginal(
  p1, type = "histogram", 
  groupFill = T
) 

p2 <- ggplot() +
  geom_point(data = test_pred,
             aes(x = log_yield, y = oos_prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = NULL) +
  geom_text(data = NULL, aes(x = .15, y = .8), label = latex2exp::TeX(
    paste0(r'($R^2 = $)', test_R2, r'( ()', test_sem_R2, r'())')
  )) +
  geom_text(data = NULL, aes(x = .15, y = .75), label = latex2exp::TeX(
    paste0(r'( $r^2 = $)', test_r2, r'( ()', test_sem_r2, r'())')
  )) +
  scale_x_continuous(limits = c(0, .82)) +
  scale_y_continuous(limits = c(0, 0.82)) +
  theme(legend.position = leg_pos
        ,legend.background = element_rect(fill = alpha(.5))
  ) 

p2 <- ggExtra::ggMarginal(
  p2, type = "histogram", 
  groupFill = T
) 
cowplot::plot_grid(p1, p2, labels=c("(a)", "(b)"), ncol = 2, nrow = 1)
```

```{r fig.height=4.5, fig.width=8.5}
leg_pos <- c(.89, .25)
limits <- c(-0.36, 0.36)

p1 <- ggplot() +
  geom_point(data = train_pred,
             aes(x = demean_log_yield, y = demean_oos_prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = 'Model estimate') +
  geom_text(data = NULL, aes(x = -.2, y = .325), label = latex2exp::TeX(
    paste0(r'($R^2 = $)', val_demean_R2, r'( ()', val_demean_sem_R2, r'())')
  )) +
  geom_text(data = NULL, aes(x = -.2, y = .275), label = latex2exp::TeX(
    paste0(r'( $r^2 = $)', val_demean_r2, r'( ()', val_demean_sem_r2, r'())')
  )) +
  scale_x_continuous(limits = limits) +
  scale_y_continuous(limits = limits) +
  theme(legend.position = "none") 

p1 <- ggExtra::ggMarginal(
  p1, type = "histogram", 
  groupFill = T
) 

p2 <- ggplot() +
  geom_point(data = test_pred,
             aes(x = demean_log_yield, y = demean_oos_prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = NULL) +
  geom_text(data = NULL, aes(x = -.2, y = .325), label = latex2exp::TeX(
    paste0(r'($R^2 = $)', test_demean_R2, r'( ()', test_demean_sem_R2, r'())')
  )) +
  geom_text(data = NULL, aes(x = -.2, y = .275), label = latex2exp::TeX(
    paste0(r'( $r^2 = $)', test_demean_r2, r'( ()', test_demean_sem_r2, r'())')
  )) +
  scale_x_continuous(limits = limits) +
  scale_y_continuous(limits = limits) +
  theme(legend.position = leg_pos
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p2 <- ggExtra::ggMarginal(
  p2, type = "histogram", 
  groupFill = T
) 
cowplot::plot_grid(p1, p2, labels=c("(a)", "(b)"), ncol = 2, nrow = 1)

```

```{r fig.height=4.5, fig.width=8.5}
oos_anom_preds <- here::here(
  "data",
  "results",
  "2_sensor_top-mod_oos_predictions_10-splits_2023-06-08_rcf_climate-False_anom-True.csv"
  ) |> 
  readr::read_csv()

oos_anom_preds_summary <- oos_anom_preds |> 
  dplyr::group_by(data_fold, district, year) |> 
  dplyr::summarise(
    log_yield = mean(log_yield),
    oos_prediction = mean(oos_prediction),
    demean_log_yield = mean(demean_log_yield), 
    demean_oos_prediction = mean(demean_oos_prediction)
  )

summary_anom_stats <- oos_anom_preds |> 
  dplyr::group_by(data_fold, split, random_state) |> 
  dplyr::summarise(
    R2 = r2_general(log_yield, oos_prediction),
    r2 = r2_pears(log_yield, oos_prediction)
  ) |> 
  dplyr::ungroup() |> 
  dplyr::group_by(data_fold) |> 
  dplyr::summarise(
    mean_R2 = mean(R2) |> round(3), 
    mean_r2 = mean(r2) |> round(3), 
    sem_R2 = (stderror(R2) * 2) |> round(3),
    sem_r2 = (stderror(r2) * 2) |> round(3)
  )
    
test_anom_pred <- dplyr::filter(oos_anom_preds_summary, data_fold == "test")
train_anom_pred <- dplyr::filter(oos_anom_preds_summary, data_fold == "train")

val_anom <- dplyr::filter(summary_anom_stats, data_fold == "train")
test_anom <- dplyr::filter(summary_anom_stats, data_fold == "test") 

val_anom_R2 <- dplyr::pull(val_anom, mean_R2)
val_anom_sem_R2   <- dplyr::pull(val_anom, sem_R2)
val_anom_r2 <- dplyr::pull(val_anom, mean_r2)
val_anom_sem_r2  <- dplyr::pull(val_anom, sem_r2) 

test_anom_R2 <- dplyr::pull(test_anom, mean_R2)
test_anom_sem_R2  <- dplyr::pull(test_anom, sem_R2)
test_anom_r2 <- dplyr::pull(test_anom, mean_r2)
test_anom_sem_r2  <- dplyr::pull(test_anom, sem_r2)

leg_pos <- c(.89, .25)
limits <- c(-0.36, 0.36)

p1 <- ggplot() +
  geom_point(data = train_anom_pred,
             aes(x = log_yield, y = oos_prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = 'Model estimate') +
  geom_text(data = NULL, aes(x = -.2, y = .325), label = latex2exp::TeX(
    paste0(r'($R^2 = $)', val_anom_R2, r'( ()', val_anom_sem_R2, r'())')
  )) +
  geom_text(data = NULL, aes(x = -.2, y = .275), label = latex2exp::TeX(
    paste0(r'( $r^2 = $)', val_anom_r2, r'( ()', val_anom_sem_r2, r'())')
  )) +
  scale_x_continuous(limits = limits) +
  scale_y_continuous(limits = limits) +
  theme(legend.position = "none"
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p1 <- ggExtra::ggMarginal(
  p1, type = "histogram", 
  groupFill = T
) 

p2 <- ggplot() +
  geom_point(data = test_anom_pred,
             aes(x = log_yield, y = oos_prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = NULL) +
  geom_text(data = NULL, aes(x = -.2, y = .325), label = latex2exp::TeX(
    paste0(r'($R^2 = $)', test_anom_R2, r'( ()', test_anom_sem_R2, r'())')
  )) +
  geom_text(data = NULL, aes(x = -.2, y = .275), label = latex2exp::TeX(
    paste0(r'( $r^2 = $)', test_anom_r2, r'( ()', test_anom_sem_r2, r'())')
  )) +
  scale_x_continuous(limits = limits) +
  scale_y_continuous(limits = limits) +
  theme(legend.position = leg_pos
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p2 <- ggExtra::ggMarginal(
  p2, type = "histogram", 
  groupFill = T
) 
cowplot::plot_grid(p1, p2, labels=c("(a)", "(b)"), ncol = 2, nrow = 1)
```
















```{r}
one_sensor_ndvi_results <- here::here("data", "results", one_sensor_ndvi_fn) %>% 
  read_csv(show_col_types = FALSE) 

two_sensor_ndvi_results <- here::here("data", "results", two_sensor_ndvi_fn) %>%
  read_csv(show_col_types = FALSE)  

one_sensor_pre_tmp_ndvi_results <- here::here("data", "results", one_sensor_pre_tmp_ndvi_fn) %>% 
  read_csv(show_col_types = FALSE) 

two_sensor_pre_tmp_ndvi_results <- here::here("data", "results", two_sensor_pre_tmp_ndvi_fn) %>%
  read_csv(show_col_types = FALSE)  
```

# Zambian Districts

```{r fig.height=7, fig.width=8, warning=FALSE, message=FALSE}
africa <- ne_countries(scale = "medium", returnclass = "sf") %>% 
  dplyr::filter(continent == 'Africa')

extent <- terra::ext(zmb_union)
extent <- terra::as.polygons(extent)
terra::crs(extent) <- "epsg:4326"

provinces <- here::here('data', 'geo_boundaries', 'gadm36_ZMB_1.shp') %>% 
  sf::read_sf() %>% 
  dplyr::rename('province' = NAME_1)

ybreaks <- c(-8, -10, -12, -14, -16, -18)
ylabs <- paste0(ybreaks,'°S')

xbreaks <- c(22, 24, 26, 28, 30, 32, 34)
xlabs <- paste0(xbreaks,'°E')

inset <- ggplot() +
  geom_sf(data = africa, fill = "white", linewidth = 1) +
  geom_sf(data = extent, fill = NA, linewidth = 1, color = 'red') +
  theme_void() +
  theme(panel.border = element_rect(fill = NA),
        panel.background = element_rect(fill = alpha("white", .5)))

main <- ggplot() +
  geom_sf(data = country_shp, linewidth = .5, color = 'black', fill = "grey60") +
  geom_sf(data = provinces, linewidth = 1, color = 'black', fill = NA) +
  geom_sf_label(data = provinces, aes(label = province) )+
  scale_fill_viridis_d() +
  scale_size_identity() + 
  scale_x_continuous(breaks = xbreaks, labels = xlabs) +
  scale_y_continuous(breaks = ybreaks, labels = ylabs) +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "right")

ggdraw() +
  draw_plot(main) +
  draw_plot(inset, x = 0.7, y = .06, width = .3, height = .3)
```

# Zambian Maize Growing Season

```{r}

ggplot(data = zmb_precip_summary) +
  aes(x = month, y = precipitation) +
  labs(x = "Month", y = "Precipitation (mm)") + # TO DO: confirm with cullen units are mm
  geom_col(fill = "dodgerblue3", color = "black", width = 0.80) +
  scale_y_continuous(expand = expansion(add = c(0, 20)), # removes buffer between x-axis and bars
                     breaks = seq(0, 275, 50)) + 
  theme_classic() +
  theme(panel.border = element_rect(color = "black",
                                    fill = NA,
                                    linewidth = 1),
        axis.text.x = element_text(colour = "black"),
        axis.text.y = element_text(colour = "black")) +
### SOWING
  geom_segment(x = "Oct", xend = "Dec", y = 80, yend = 80,
               lineend = 'round', size = 2) +
  geom_label(x = "Dec",
             y = 80, label = "Sowing",
             hjust = 1.65, vjust = .5, size = 3) +
### GROWING
  geom_segment(x = "Nov", xend = "May", y = 60, yend = 60,
               lineend = 'round', size = 2) +
  geom_label(x = "Feb",
             y = 60, label = "Growing",
             hjust = 1.1, vjust = .5, size = 3) +
  ### SENTINEL SATELLITE IMAGERY
  geom_segment(x = "Oct", xend = "Sep", y = 140, yend = 140,
               lineend = 'round', size = 2) +
  geom_text(aes(x = "Jul", y = 150, label = "Sentinel Satellite Imagery 2016-2021"), 
             angle = 0, 
             size = 3,
             color = "black") +
  ### LANDSAT SATELLITE IMAGERY
  geom_segment(x = "Apr", xend = "Sep", y = 110, yend = 110,
               lineend = 'round', size = 2) +
  geom_text(aes(x = "Jul", y = 120, label = "Landsat Satellite Imagery 2016-2021"), 
             angle = 0, 
             size = 3,
             color = "black") +
### CFS SURVEY
  geom_segment(x = "Mar", xend = "Apr", y = 40, yend = 40, 
               lineend = 'round', size = 2) +
  geom_label(x = "Apr",
             y = 40, label = "CFS ", 
             hjust = 1.3, vjust = .5, size = 3) +
### HARVEST  
  geom_segment(x = "Apr", xend = "Jun", y = 20, yend = 20, 
               lineend = 'round', size = 2) +
  geom_label(x = "May",
             y = 20, label = "Harvest", 
             hjust = 0.5, vjust = 0.5, size = 3) 
```

# Zambian Cropland

```{r fig.height=8, fig.width=8, warning=FALSE, message=FALSE}
country_vect <- country_shp %>%
  sf::st_union() %>%
  terra::vect()
  
crop_land <- here::here("data", "land_cover", "ZMB_cropland_2019.tif") %>%
  terra::rast() %>%
  terra::crop(country_vect, mask=TRUE) %>% 
  terra::aggregate(fact=33, fun='mean', na.rm = TRUE)

crop_land <- crop_land * 100

ybreaks <- c(-8, -10, -12, -14, -16, -18)
ylabs <- paste0(ybreaks,'°S')

xbreaks <- c(22, 24, 26, 28, 30, 32, 34)
xlabs <- paste0(xbreaks,'°E')

ggplot() +
  tidyterra::geom_spatraster(data = crop_land) +
  geom_sf(data = country_shp, color = 'white', fill = NA, linewidth = .7) +
  scale_fill_viridis_c(na.value = NA, guide = guide_colorbar(title.position = "top")) +
  scale_x_continuous(breaks = xbreaks, labels = xlabs) +
  scale_y_continuous(breaks = ybreaks, labels = ylabs) +
  labs(fill = "Cropland Percentage") +
  theme(legend.position = "bottom")
```

# Model Results

```{r}
cat('Train on levels\n\tCoefficient of determination')
cat(paste0("\n\tVal:  ", r2_general(train_pred$log_yield,
                                     train_pred$kfold_cv_predictions)))
cat(paste0("\n\tTest: ", r2_general(test_pred$log_yield,
                                     test_pred$prediction)))
cat('\n\n\tPearsons correlation coefficient')
cat(paste0("\n\tVal:  ", r2_pears(train_pred$log_yield,
                                   train_pred$kfold_cv_predictions)))
cat(paste0("\n\tTest: ", r2_pears(test_pred$log_yield,
                                   test_pred$prediction)))

cat('\n\nTrain on levels, then demean\n\tCoefficient of determination')
cat(paste0("\n\tVal:  ", r2_general(train_pred$demean_yield, 
                                     train_pred$demean_cv_pred)))
cat(paste0("\n\tTest: ", r2_general(test_pred$demean_yield, 
                                     test_pred$demean_pred)))
cat('\n\n\tPearsons correlation coefficient')
cat(paste0("\n\tVal:  ", r2_pears(train_pred$demean_yield, 
                                   train_pred$demean_cv_pred)))
cat(paste0("\n\tTest: ", r2_pears(test_pred$demean_yield, 
                                   test_pred$demean_pred)))

cat('\n\nTrain on anomailes - best above \n\tCoefficient of determination')
cat(paste0("\n\tVal:  ", r2_general(anom_train_pred$yield_anom,
                                     anom_train_pred$kfold_cv_predictions)))
cat(paste0("\n\tTest: ", r2_general(anom_test_pred$yield_anom,
                                     anom_test_pred$prediction)))
cat('\n\n\tPearsons correlation coefficient')
cat(paste0("\n\tVal:  ", r2_pears(anom_train_pred$yield_anom, 
                                   anom_train_pred$kfold_cv_predictions)))
cat(paste0("\n\tTest: ", r2_pears(anom_test_pred$yield_anom, 
                                   anom_test_pred$prediction)))

cat('\n\nTrain on anomailes - best overall \n\tCoefficient of determination')
cat(paste0("\n\tVal:  ", r2_general(best_anom_train_pred$yield_anom,
                                     best_anom_train_pred$kfold_cv_predictions)))
cat(paste0("\n\tTest: ", r2_general(best_anom_test_pred$yield_anom,
                                     best_anom_test_pred$prediction)))
cat('\n\n\tPearsons correlation coefficient')
cat(paste0("\n\tVal:  ", r2_pears(best_anom_train_pred$yield_anom,
                                   best_anom_train_pred$kfold_cv_predictions)))
cat(paste0("\n\tTest: ", r2_pears(best_anom_test_pred$yield_anom,
                                   best_anom_test_pred$prediction)))
```

# Best General Model

```{r fig.height=3.5, fig.width=7}
val_R2  <- r2_general(train_pred$log_yield, train_pred$kfold_cv_predictions)
test_R2 <- r2_general(test_pred$log_yield, test_pred$prediction)

val_r2  <- r2_pears(train_pred$log_yield, train_pred$kfold_cv_predictions)
test_r2 <- r2_pears(test_pred$log_yield, test_pred$prediction)

train_n <- length(train_pred$prediction)
test_n  <- length(test_pred$prediction)

val_label  <- plot_label_3(R2 = val_R2, r2 = val_r2, n = train_n)
test_label <- plot_label_3(R2 = test_R2, r2 = test_r2, n = test_n)

p1 <- ggplot() +
  geom_point(data = summary_predictions,
             aes(x = log_yield, y = kfold_cv_predictions, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = 'Model estimate') +
  geom_text(data = NULL, aes(x = .06, y = .75), label = val_label) +
  scale_x_continuous(limits = c(0, .82)) +
  scale_y_continuous(limits = c(0, 0.82)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p1 <- ggExtra::ggMarginal(
  p1, type = "histogram", 
  groupFill = T
) 

p2 <- ggplot() +
  geom_point(data = filter(summary_predictions, split == 'test'),
             aes(x = log_yield, y = prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha)', y = NULL) +
  geom_text(data = NULL, aes(x = .06, y = .75), label = test_label) +
  scale_x_continuous(limits = c(0, .82)) +
  scale_y_continuous(limits = c(0, 0.82)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p2 <- ggExtra::ggMarginal(
  p2, type = "histogram", 
  groupFill = T
) 
cowplot::plot_grid(p1, p2, labels=c("(a)", "(b)"), ncol = 2, nrow = 1)
```

# Demeaned Best General Model

```{r fig.height=3.5, fig.width=7}
val_R2  <- r2_general(train_pred$demean_yield, train_pred$demean_cv_pred)
test_R2 <- r2_general(test_pred$demean_yield, test_pred$demean_pred, round = 4)

val_r2  <- r2_pears(train_pred$demean_yield, train_pred$demean_cv_pred)
test_r2 <- r2_pears(test_pred$demean_yield, test_pred$demean_pred)

train_n <- length(train_pred$prediction)
test_n  <- length(test_pred$prediction)

val_label  <- plot_label_3(R2 = val_R2, r2 = val_r2, n = train_n)
test_label <- plot_label_3(R2 = test_R2, r2 = test_r2, n = test_n)

p1 <- ggplot() +
  geom_point(data = train_pred,
             aes(x = demean_yield, y = demean_cv_pred, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha) - mean(log(1+mt/ha))', y = 'Demeaned model estimate') +
  geom_text(data = NULL, aes(x = -.35, y = .35), label = val_label) +
  scale_x_continuous(limits = c(-0.4, 0.4)) +
  scale_y_continuous(limits = c(-0.4, 0.4)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p1 <- ggExtra::ggMarginal(
  p1, type = "histogram", 
  groupFill = T
) 

p2 <- ggplot() +
  geom_point(data = filter(test_pred, split == 'test'),
             aes(x = demean_yield, y = demean_pred, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha) - mean(log(1+mt/ha))', y = NULL) +
  geom_text(data = NULL, aes(x = -.35, y = .35), label = test_label) +
  scale_x_continuous(limits = c(-0.4, 0.4)) +
  scale_y_continuous(limits = c(-0.4, 0.4)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p2 <- ggExtra::ggMarginal(
  p2, type = "histogram", 
  groupFill = T
) 
plot_grid(p1, p2, labels=c("(a)", "(b)"), ncol = 2, nrow = 1)
```

# Anomaly of Best General Model

```{r fig.height=3.5, fig.width=7}
val_R2  <- r2_general(anom_train_pred$yield_anom, anom_train_pred$kfold_cv_predictions)
test_R2 <- r2_general(anom_test_pred$yield_anom, anom_test_pred$prediction)

val_r2  <- r2_pears(anom_train_pred$yield_anom, anom_train_pred$kfold_cv_predictions)
test_r2 <- r2_pears(anom_test_pred$yield_anom, anom_test_pred$prediction)

train_n <- length(anom_train_pred$kfold_cv_predictions)
test_n  <- length(anom_test_pred$prediction)

val_label  <- plot_label_3(R2 = val_R2, r2 = val_r2, n = train_n)
test_label <- plot_label_3(R2 = test_R2, r2 = test_r2, n = test_n)

p1 <- ggplot() +
  geom_point(data = anom_train_pred,
             aes(x = yield_anom, y = kfold_cv_predictions, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha) - mean(log(1+mt/ha))', y = 'Anomaly model estimate') +
  geom_text(data = NULL, aes(x = -.35, y = .35), label = val_label) +
  scale_x_continuous(limits = c(-0.4, 0.4)) +
  scale_y_continuous(limits = c(-0.4, 0.4)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p1 <- ggExtra::ggMarginal(
  p1, type = "histogram", 
  groupFill = T
) 

p2 <- ggplot() +
  geom_point(data = filter(anom_test_pred, split == 'test'),
             aes(x = yield_anom, y = prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha) - mean(log(1+mt/ha))', y = NULL) +
  geom_text(data = NULL, aes(x = -.35, y = .35), label = test_label) +
  scale_x_continuous(limits = c(-0.4, 0.4)) +
  scale_y_continuous(limits = c(-0.4, 0.4)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p2 <- ggExtra::ggMarginal(
  p2, type = "histogram", 
  groupFill = T
) 
plot_grid(p1, p2, labels=c("(a)", "(b)"), ncol = 2, nrow = 1)
```

# Best Over Time Model

```{r fig.height=3.5, fig.width=7}
val_R2  <- r2_general(best_anom_train_pred$yield_anom, best_anom_train_pred$kfold_cv_predictions)
test_R2 <- r2_general(best_anom_test_pred$yield_anom, best_anom_test_pred$prediction)

val_r2  <- r2_pears(best_anom_train_pred$yield_anom, best_anom_train_pred$kfold_cv_predictions)
test_r2 <- r2_pears(best_anom_test_pred$yield_anom, best_anom_test_pred$prediction)

train_n <- length(best_anom_train_pred$kfold_cv_predictions)
test_n  <- length(best_anom_test_pred$prediction)

val_label  <- plot_label_3(R2 = val_R2, r2 = val_r2, n = train_n)
test_label <- plot_label_3(R2 = test_R2, r2 = test_r2, n = test_n)

p1 <- ggplot() +
  geom_point(data = best_anom_train_pred,
             aes(x = yield_anom, y = kfold_cv_predictions, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha) - mean(log(1+mt/ha))', y = 'Anomaly model estimate') +
  geom_text(data = NULL, aes(x = -.35, y = .35), label = val_label) +
  scale_x_continuous(limits = c(-0.4, 0.4)) +
  scale_y_continuous(limits = c(-0.4, 0.4)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p1 <- ggExtra::ggMarginal(
  p1, type = "histogram", 
  groupFill = T
) 

p2 <- ggplot() +
  geom_point(data = filter(best_anom_test_pred, split == 'test'),
             aes(x = yield_anom, y = prediction, color = as.factor(year))) +
  geom_abline() +
  scale_color_viridis_d() +
  labs(color = NULL, x = 'log(1+mt/ha) - mean(log(1+mt/ha))', y = NULL) +
  geom_text(data = NULL, aes(x = -.35, y = .35), label = test_label) +
  scale_x_continuous(limits = c(-0.4, 0.4)) +
  scale_y_continuous(limits = c(-0.4, 0.4)) +
  theme(legend.position = c(.9, .35)
        ,legend.background = element_rect(fill = alpha(.75))
  ) 

p2 <- ggExtra::ggMarginal(
  p2, type = "histogram", 
  groupFill = T
) 
plot_grid(p1, p2, labels=c("(a)", "(b)"), ncol = 2, nrow = 1)
```




